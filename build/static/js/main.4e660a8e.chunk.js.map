{"version":3,"sources":["components/PictureSelect/utils/index.ts","components/PictureSelect/components/PictureItem.tsx","components/PictureSelect/index.tsx","App.tsx","index.tsx"],"names":["useCheck","initialValue","callback","useState","checked","setChecked","useEffect","onChange","PictureItem","props","url","name","id","isChecked","onCheck","pathnameArr","URL","pathname","split","fileName","length","className","type","value","src","alt","title","onClick","PictureSelect","pictures","checkedId","setCheckedId","allCheckedId","setAllCheckedId","nums","isAllChecked","handleCheckItem","v","newValue","idIdex","indexOf","copy","splice","map","item","includes","picturesList","App","setValue","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e660a8e.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\n/**\n * checkHook\n * @param initialValue 初始值\n * @param callback 值改变回调\n */\nexport const useCheck = (\n  initialValue: boolean,\n  callback?: (value: boolean) => void\n) => {\n  const [checked, setChecked] = useState<boolean>(initialValue);\n  useEffect(() => {\n    setChecked(initialValue);\n  }, [initialValue]);\n  return {\n    checked,\n    onChange: () => {\n      setChecked(!checked);\n      if (typeof callback === \"function\") {\n        callback(!checked);\n      }\n    },\n  };\n};\n","import React, { FC, useState } from \"react\";\nimport \"./PictureItem.css\";\nimport { useCheck } from \"../utils\";\n\ninterface Props {\n  key: string;\n  id: string;\n  name: string;\n  url: string;\n  isChecked: boolean;\n  onCheck: (value: boolean, id: string) => void;\n}\n\nconst PictureItem: FC<Props> = (props) => {\n  const { url, name, id, isChecked, onCheck } = props;\n  const { pathname } = new URL(url);\n  const pathnameArr = pathname.split(\"/\");\n  const fileName = pathnameArr[pathnameArr.length - 1];\n  const [checked, setChecked] = useState<boolean>(isChecked);\n  const handleChange = (value: boolean) => {\n    setChecked(value);\n    if (typeof onCheck === \"function\") {\n      onCheck(value, id);\n    }\n  };\n  const handleClick = () => {\n    setChecked(!checked);\n    if (typeof onCheck === \"function\") {\n      onCheck(!checked, id);\n    }\n  };\n  return (\n    <div className=\"item-box\">\n      <input\n        type=\"checkbox\"\n        name=\"singleCheck\"\n        id=\"singleCheck\"\n        className=\"single-check\"\n        {...useCheck(isChecked, handleChange)}\n      />\n      <img src={url} alt={name} title={name} onClick={handleClick} />\n      <span title={fileName}>{fileName}</span>\n    </div>\n  );\n};\n\nexport default PictureItem;\n","/**\n * 图片选择组件\n */\nimport React, { FC, useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport PictureItem from \"./components/PictureItem\";\nimport { useCheck } from \"./utils\";\n\n/**\n * pictures每一项类型\n */\ntype picturesItem = {\n  id: string;\n  name: string;\n  url: string;\n};\n\ninterface Props {\n  pictures: picturesItem[];\n  value: string[];\n  onChange: (value: string[]) => void;\n  [props: string]: any;\n}\n\nconst PictureSelect: FC<Props> = (props: Props) => {\n  const { pictures, value, onChange } = props;\n  const [checkedId, setCheckedId] = useState<string[]>([]); // 选中的id\n  const [allCheckedId, setAllCheckedId] = useState<string[]>([]); // 全部的id\n  const nums = value?.length || 0; // 已选的数量\n  const isAllChecked = nums === pictures.length; // 是否全选\n  /**\n   * 全选\n   * @param value\n   */\n  const handleAllChecked = (value: boolean) => {\n    const newValue = value ? allCheckedId : []; // 全选id或空数组\n    setCheckedId(newValue);\n    if (typeof onChange === \"function\") {\n      onChange(newValue);\n    }\n  };\n  /**\n   * 选择某一个\n   * @param v\n   * @param id\n   */\n  const handleCheckItem = (v: boolean, id: string) => {\n    const idIdex = value.indexOf(id);\n    let newValue;\n    // 当前未选中时，改为选中\n    if (idIdex < 0) {\n      newValue = [...value, id];\n    } else {\n      // 已选中时，取消选中\n      const copy = [...value];\n      copy.splice(idIdex, 1);\n      newValue = [...copy];\n    }\n    setCheckedId(newValue);\n    if (typeof onChange === \"function\") {\n      onChange(newValue);\n    }\n  };\n  useEffect(() => {\n    setAllCheckedId(pictures.map((item) => item.id));\n  }, [pictures]);\n  useEffect(() => {\n    setCheckedId([...value]);\n  }, [value]);\n  return (\n    <div className=\"picture-box\">\n      <div className=\"all-check-box\">\n        <input\n          type=\"checkbox\"\n          name=\"allChecked\"\n          id=\"allChecked\"\n          className=\"allChecked\"\n          {...useCheck(isAllChecked, handleAllChecked)}\n        />\n        <span>已选中{nums}个文件</span>\n      </div>\n      <div className=\"items-box\">\n        {pictures?.map((item) => {\n          const { id } = item;\n          const isChecked = checkedId.includes(id);\n          return (\n            <PictureItem\n              key={id}\n              isChecked={isChecked}\n              onCheck={handleCheckItem}\n              {...item}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default PictureSelect;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport PictureSelect from \"./components/PictureSelect\";\n\nconst picturesList = [\n  {\n    id: \"1\",\n    name: \"foo\",\n    url:\n      \"https://gw.alipayobjects.com/mdn/rms_d212b7/afts/img/A*LlfeSa8N0WgAAAAAAAAAAABkARQnAQ\",\n  },\n  {\n    id: \"2\",\n    name: \"foo\",\n    url:\n      \"https://gw.alipayobjects.com/mdn/rms_d212b7/afts/img/A*LlfeSa8N0WgAAAAAAAAAAABkARQnAQ\",\n  },\n  {\n    id: \"3\",\n    name: \"foo\",\n    url:\n      \"https://gw.alipayobjects.com/mdn/rms_d212b7/afts/img/A*LlfeSa8N0WgAAAAAAAAAAABkARQnAQ\",\n  },\n];\n\nconst App = () => {\n  const [value, setValue] = useState([\"1\"]);\n  const pictures = [...picturesList];\n  console.log(value);\n  return (\n    <div className=\"App\">\n      <PictureSelect\n        pictures={pictures}\n        value={value}\n        onChange={(value) => setValue(value)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}